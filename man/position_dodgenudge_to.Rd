% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/position-dodge-nudge-to.R,
%   R/position-dodge2nudge-to.R
\name{position_dodgenudge_to}
\alias{position_dodgenudge_to}
\alias{position_nudge_to}
\alias{position_dodge2nudge_to}
\title{Nudge or dodge plus nudge labels to new positions}
\usage{
position_dodgenudge_to(
  width = 1,
  preserve = c("total", "single"),
  x = NULL,
  y = NULL,
  x.action = c("none", "spread"),
  y.action = c("none", "spread"),
  x.distance = "equal",
  y.distance = "equal",
  x.expansion = 0,
  y.expansion = 0,
  kept.origin = c("dodged", "original", "none")
)

position_nudge_to(
  x = NULL,
  y = NULL,
  x.action = c("none", "spread"),
  y.action = c("none", "spread"),
  x.distance = "equal",
  y.distance = "equal",
  x.expansion = 0,
  y.expansion = 0,
  kept.origin = c("original", "none")
)

position_dodge2nudge_to(
  width = 1,
  preserve = c("total", "single"),
  padding = 0.1,
  reverse = FALSE,
  x = NULL,
  y = NULL,
  x.action = c("none", "spread"),
  y.action = c("none", "spread"),
  x.distance = "equal",
  y.distance = "equal",
  x.expansion = 0,
  y.expansion = 0,
  kept.origin = c("dodged", "original", "none")
)
}
\arguments{
\item{width}{Dodging width, when different to the width of the individual
elements. This is useful when you want to align narrow geoms with wider
geoms. See the examples.}

\item{preserve}{Should dodging preserve the total width of all elements at a
position, or the width of a single element?.}

\item{x, y}{Coordinates of the destination position. A vector of mode
\code{numeric}, that is extended if needed, to the same length as rows
there are in \code{data}. The default, \code{NULL}, leaves the original
coordinates unchanged after dodging.}

\item{x.action, y.action}{character string, one of \code{"none"}, or
\code{"spread"}. With \code{"spread"} distributing the positions
within the range of argument \code{x} or \code{y}, if non-null, or the
range the variable mapped to \emph{x} or \code{y}, otherwise.}

\item{x.distance, y.distance}{character or numeric Currently only \code{"equal"} is
implemented.}

\item{x.expansion, y.expansion}{numeric vectors of length 1 or 2, as a
fraction of width of the range.}

\item{kept.origin}{One of \code{"original"}, \code{"dodged"} or
\code{"none"}.}

\item{padding}{Padding between elements at the same position. Elements are
shrunk by this proportion to allow space between them. Defaults to 0.1.}

\item{reverse}{If TRUE, will reverse the default stacking order. This is
useful if you're rotating both the plot and legend.}
}
\value{
A \code{"Position"} object.
}
\description{
\code{position_dodgenudge_to()} is generally useful for adjusting the
position of labels or text, both on a discrete or continuous scale.
\code{position_dodgenudge_to()} and \code{position_nudge_to()} differ from
\code{\link[ggplot2]{position_nudge}} in that the coordinates of the new
position are given directly, rather than as a displacement from the original
location. It optionally sets an even spacing among positions within a range.
In \code{position_dodgenudge_to()} this nudging can be combined with dodging.
As with other position functions in this package, the original positions are
preserved to allow the text or labels to be linked back to their original
position with a segment or arrow.
}
\details{
The nudged to \code{x} and/or \code{y} values replace the original ones in
  \code{data}, while the original or the dodged coordinates are returned in \code{x_orig}
  and \code{y_orig}. Nudge values supported are those of \emph{mode} numeric,
  thus including dates and times when they match the mapped data.

  If the length of \code{x} and/or \code{y} is more than one but less than
  rows are present in the data, the vector is both recycled and reordered so
  that the nudges are applied sequentially based on the data values. If their
  length matches the number of rows in data, they are assumed to be already
  in data order.

  The applied dodge is identical to that by
  \code{\link[ggplot2]{position_dodge}} while nudging is different to that by
  \code{\link[ggplot2]{position_nudge}}.

There are two possible uses for these functions. First, without using dodging
they can be used to obtain aligned labels when the labelled objects are not
aligned. This is the most common use.

The second use is to label dodged bars, boxplots or points with labels
aligned. In this case, it is mandatory to use
the same argument to \code{width} when passing \code{position_dodge()} to
\code{geom_col()} and \code{position_dodgenudge_to()} to \code{geom_text()} or
\code{geom_label()} or their repulsive equivalents. Otherwise the arrows or
segments will fail to connect to the labels. In other words dodging is
computed twice. Dodge is identical to that obtained with the same arguments
in \code{\link[ggplot2]{position_dodge}} as \code{position_dodgenudge_to()}
simply calls the same code from package 'ggplot2' ahead of applying
nudging.

When applying dodging, the return of original positions instead of the dodged
ones is achieved by passing \code{origin = "original"} instead of the default
of \code{origin = "dodged"}.
}
\note{
Irrespective of the action, the ordering of rows in \code{data} is
  preserved.
}
\examples{
df <- data.frame(
  x = c(1,3,2,5,4,2.5),
  y = c(2, 1, 2.5, 1.8, 2.8, 1.5),
  label = c("abc","cd","d","c","bcd","a")
)

# default does nothing
ggplot(df, aes(x, y, label = label)) +
  geom_point() +
  geom_text(position = position_nudge_to())

ggplot(df, aes(x, y, label = label)) +
  geom_point() +
  geom_text(position = position_dodgenudge_to())

# a single y (or x) value nudges all observations to this data value
ggplot(df, aes(x, y, label = label)) +
  geom_point() +
  geom_text(position = position_nudge_to(y = 3))

# with a suitable geom, segments or arrows can be added
ggplot(df, aes(x, y, label = label)) +
  geom_point() +
  geom_text_s(position = position_nudge_to(y = 3))

# alternating in y value order because y has fewer values than rows in data
ggplot(df, aes(x, y, label = label)) +
  geom_point() +
  geom_text_s(position = position_nudge_to(y = c(3, 0)))

ggplot(df, aes(x, y, label = label)) +
  geom_point() +
  geom_text_s(position = position_nudge_to(y = c(0, 3)))

# in data row order because y has as many values as rows in data
ggplot(df, aes(x, y, label = label)) +
  geom_point() +
  geom_text_s(position = position_nudge_to(y = rep_len(c(0, 3), 6)))

# spread the values at equal distance within the available space
ggplot(df, aes(x, y, label = label)) +
  geom_point() +
  geom_text_s(position =
    position_nudge_to(y = 3, x.action = "spread"))

# spread the values at equal distance within the expanded available space
ggplot(df, aes(x, y, label = label)) +
  geom_point() +
  geom_text_s(position =
    position_nudge_to(y = 3, x.action = "spread", x.expansion = 0.1))

# spread the values at equal distance within the contracted available space
ggplot(df, aes(x, y, label = label)) +
  geom_point() +
  geom_text_s(position =
    position_dodgenudge_to(y = 3, x.action = "spread", x.expansion = -0.1))

# spread the values at equal distance within the range given by x
ggplot(df, aes(x, y, label = label)) +
  geom_point() +
  geom_text_s(position =
    position_nudge_to(y = 3, x = c(2,4), x.action = "spread"),
    hjust = "center")

ggplot(df, aes(x, y, label = label)) +
  geom_point() +
  geom_text_s(position =
    position_nudge_to(y = 3, x = c(0,6), x.action = "spread"),
    hjust = "center")

}
\seealso{
\code{\link[ggplot2]{position_nudge}},
  \code{\link[ggplot2]{position_dodge}},
  \code{\link[ggrepel]{position_nudge_repel}}.

Other position adjustments: 
\code{\link{position_dodgenudge}()},
\code{\link{position_jitternudge}()},
\code{\link{position_nudge_center}()},
\code{\link{position_nudge_keep}()},
\code{\link{position_nudge_line}()},
\code{\link{position_stacknudge}()}
}
\concept{position adjustments}
